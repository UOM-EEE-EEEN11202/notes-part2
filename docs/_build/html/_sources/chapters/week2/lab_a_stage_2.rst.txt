.. role:: console(code)
   :language: console

Stage 2
=======

In Stage 2 of the lab we're going to look at `version control <https://uom-eee-eeen11202.github.io/notes-part1/chapters/software_development_tools/version_control.html>`_. We'll use this a lot as we move through the course.

For this part of the lab, and for the rest of the course, you VSCode and Docker installed on your computer. `Follow the instructions for getting this on your computer. <https://uom-eee-eeen11202.github.io/chapters/useful_information/install.html>`_.

Start Docker before continuing with the below.


Initial setup
-------------
We first need to do some initial setup. In :ref:`Stage 1 of the labs <lab1a>` we interacted with your computer, using the command line to control it. We wrote some simple scripts to automate some tasks. The important point is that we were interacting directly with your computer. 

For our more general programming, we're going to use our own dedicated computer that sits on top of your computer, as discussed in `environment control <https://uom-eee-eeen11202.github.io/notes-part1/chapters/software_development_tools/environment_control.html>`_. Doing this can be a little confusing, you have a *virtual* computer in addition to the *physical* computer, You need to keep track of which is which,  but it's easy once you're used to it. It gives the benefit of us being able to control the settings on the computer used for programming. We can ensure everyone is using the same tools, and the same versions of the tools. This is really important when working in a large programming team, it gives a common base for everyone to be working from. 

You don't need to do very much to set this up, you just need to make sure some files are in the correct places. Again, it can be a bit fiddly to get right at first - things won't work if you miss a step. Once it's going it should be quite robust though. 

In Stage 1 of the lab you should have made a folder 

.. tab-set::
   :sync-group: os

   .. tab-item:: :fab:`windows` Windows
      :sync: key1
   
      :console:`C:\\Users\\alex\\OneDrive - The University of Manchester\\eeen11202`


   .. tab-item:: :fab:`apple` macOS / :fab:`linux` Linux
      :sync: key2

      :console:`/Users/alex/OneDrive - The University of Manchester/eeen11202` (macOS) 
      or 
      :console:`/home/alex/OneDrive - The University of Manchester/eeen11202/` (Linux)

If not, make that folder now. Inside this, make a folder called :console:`.devcontainer`.

.. danger::

    It is important that the folder name is correct. :console:`.devcontainer` including the :console:`.`. Things won't work correctly if this name is wrong. 


Then, download our *devcontainer* from `GitHub <https://github.com/UOM-EEE-EEEN11202/devcontainer>`_. Click on :console:`Code` and then :console:`Download ZIP`.

.. figure:: windows_powershell_start.png
   :width: 800
   :align: center
   :alt: A Windows start menu search for the PowerShell app

This will download a file with a :console:`.zip` extension. You should be able to double click to go inside this (you may need to do this twice). Eventually, you'll see three files that you downloaded. On Windows this looks like:

.. figure:: windows_zip_file.png
   :width: 800
   :align: center
   :alt: devcontainer files downloaded on Windows

Copy and paste these files into the :console:`.devcontainer` folder you made earlier. That is, select them with the mouse, click the copy button, navigate to your folder, and then press the paste button. Done correctly, your files and folders should look like the below (shown for Windows only).

.. figure:: windows_copied_devcontainer_files.png
   :width: 800
   :align: center
   :alt: devcontainer files copied to the correct location on Windows

Then, start VSCode. On the Welcome screen select :console:`Open Folder...`

.. figure:: vscode_open_folder.png
   :width: 800
   :align: center
   :alt: The VSCode welcome page

Select the folder

.. tab-set::
   :sync-group: os

   .. tab-item:: :fab:`windows` Windows
      :sync: key1
   
      :console:`C:\\Users\\alex\\OneDrive - The University of Manchester\\eeen11202`


   .. tab-item:: :fab:`apple` macOS / :fab:`linux` Linux
      :sync: key2

      :console:`/Users/alex/OneDrive - The University of Manchester/eeen11202` (macOS) 
      or 
      :console:`/home/alex/OneDrive - The University of Manchester/eeen11202/` (Linux)

The devcontainer may open automatically, or if not VSCode will display a message :console:`Reopen in Container`. Click on this if it appears.

.. figure:: vscode_reopen_in_container.png
   :width: 800
   :align: center
   :alt: VSCode giving the option to open a folder in a container

It can take a few minutes for the devcontainer to start, especially the first time as various files have to be downloaded from the Internet. Once successful, you should see the bottom left hand corner has changed, it will now say it's connected to a devcontainer.

.. figure:: vscode_devcontainer.png
   :width: 800
   :align: center
   :alt: VSCode showing that a devcontainer is being used

This indicates that you're using our virtual computer rather than your real computer. You're still using the same files, just editing them with a different computer. For all parts of the course from now on, you want this blue :console:`Dev Container` to be displayed in the bottom left of the screen before you start doing any programming.


Git setup
---------